{"mappings":"qhBASA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA8BAO,SAASC,cAAc,SAC/BC,iBAAiB,UA3BtB,SAA0BC,GACxBA,EAAMC,iBACN,MAAMC,EAAOF,EAAMG,OACbC,EAAQC,SAASH,EAAKZ,MAAMgB,OAC5BC,EAAOF,SAASH,EAAKK,KAAKD,OAC1BE,EAASH,SAASH,EAAKM,OAAOF,OAEpC,GAAIF,EAAQ,GAAKG,EAAO,GAAKC,EAAS,EACpCC,EAAAvB,GAASwB,OAAOC,QAAQ,4CAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAAK,CAIhCxB,EAHiBwB,EACIR,GAASQ,EAAI,GAAKL,GAGpCM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAvB,GAASwB,OAAOI,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAvB,GAASwB,OAAOC,QAAQ,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nimport Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n  const form = event.target;\n  const delay = parseInt(form.delay.value);\n  const step = parseInt(form.step.value);\n  const amount = parseInt(form.amount.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('❌ Please enter only positive values');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const promiseDelay = delay + (i - 1) * step;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleFormSubmit);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","form1","target","delay1","parseInt","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.0e07fe42.js.map"}