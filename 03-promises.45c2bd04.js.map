{"mappings":"YA8BA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,WAAsCG,OAA3BT,EAAS,oBAAwBS,OAANR,EAAM,QAEpDM,EAAO,WAAsCE,OAA3BT,EAAS,oBAAwBS,OAANR,EAAM,O,GAEpDA,E,IAIFS,MAAK,SAACC,GACLC,QAAQC,IAAIF,E,IAEbG,OAAM,SAACC,GACNH,QAAQG,MAAMA,E,IAxCPC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAUN,IARA,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErChB,EAAQuB,SAASH,EAAWI,OAC5BC,EAAOF,SAASF,EAAUG,OAC1BE,EAASH,SAASD,EAAYE,OAE3BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/B7B,EAFiB6B,EAAI,EACA3B,EAAQ2B,EAAIF,E","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promiseDelay = delay + i * step;\n    createPromise(position, promiseDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Promise ${position} resolved after ${delay} ms`);\n      } else {\n        reject(`Promise ${position} rejected after ${delay} ms`);\n      }\n    }, delay);\n  });\n\n  promise\n    .then((result) => {\n      console.log(result); // Обработка успешного выполнения промиса\n    })\n    .catch((error) => {\n      console.error(error); // Обработка ошибки промиса\n    });\n}"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","result","console","log","catch","error","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","parseInt","value","step","amount","i"],"version":3,"file":"03-promises.45c2bd04.js.map"}